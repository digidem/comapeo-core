diff --git a/node_modules/@digidem/types/vendor/hypercore/index.d.ts b/node_modules/@digidem/types/vendor/hypercore/index.d.ts
index 911e4ef..438b072 100644
--- a/node_modules/@digidem/types/vendor/hypercore/index.d.ts
+++ b/node_modules/@digidem/types/vendor/hypercore/index.d.ts
@@ -8,11 +8,31 @@ interface RemoteBitfield {
   get(index: number): boolean
 }
 
-interface HypercoreExtension {
+interface CompactEncodingState {
+  start: number
+  end: number
+  buffer: Buffer | Uint8Array
+  cache: any
+}
+
+interface CompactEncoding<T> {
+  preencode(state: CompactEncodingState, val: T): void
+  encode(state: CompactEncodingState, val: T): void
+  decode(state: CompactEncodingState): T
+}
+
+interface CodecEncoding<T> {
+  encode(val: T): Buffer | Uint8Array
+  decode(buf: Buffer | Uint8Array): T
+}
+
+type Encoding<T> = CompactEncoding<T> | CodecEncoding<T>
+
+interface HypercoreExtension<T> {
   name: string
-  encoding: any
-  send(data: Buffer | Uint8Array, peer: any): void
-  broadcast(data: Buffer | Uint8Array): void
+  encoding: Encoding<T>
+  send(message: T, peer: any): void
+  broadcast(message: T): void
   destroy(): void
 }
 
@@ -185,10 +205,10 @@ declare class Hypercore<
   session(options?: Hypercore.HypercoreOptions<TValueEncoding>): Hypercore
   close(): Promise<void>
   ready(): Promise<void>
-  registerExtension(
+  registerExtension<T = Buffer | Uint8Array>(
     name: string,
-    handlers?: { encoding?: any; onmessage?: (buf: Buffer, peer: any) => void }
-  ): HypercoreExtension
+    handlers?: { encoding?: Encoding<T>; onmessage?: (message: T, peer: any) => void }
+  ): HypercoreExtension<T>
   replicate(
     isInitiatorOrReplicationStream: boolean | Duplex,
     opts?: { keepAlive?: boolean }
